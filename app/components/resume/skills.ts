export const skill = {
  agile: 'Agile',
  apacheVelocity: 'Apache Velocity',
  apollo: 'Apollo',
  astro: 'Astro',
  awsLambda: 'AWS Lambda',
  bootstrap: 'Bootstrap',
  cSharp: 'C#',
  cSharpDotNet: 'C#/.NET',
  composableDesign: 'Composable Design',
  crabTesting: 'Crab Testing',
  dependencyInjection: 'Dependency Injection',
  docker: 'Docker',
  dotNet: '.NET',
  edgeDeployment: 'Edge Deployment',
  entityFramework: 'Entity Framework',
  esLint: 'ESLint',
  github: 'GitHub',
  gitlab: 'GitLab',
  graphQl: 'GraphQL',
  htmlCss: 'HTML/CSS',
  i18next: 'i18next',
  java: 'Java',
  javascript: 'JavaScript',
  jest: 'Jest',
  jira: 'Jira',
  laravel: 'Laravel',
  mediatR: 'MediatR',
  monorepo: 'Monorepo',
  moq: 'Moq',
  mvc: 'MVC',
  nestJs: 'NestJS',
  nextJs: 'NextJS',
  nextUi: 'NextUI',
  node: 'NodeJS',
  nx: 'NX',
  onPremHosting: 'On-Prem Hosting',
  php: 'PHP',
  playwright: 'Playwright',
  prisma: 'Prisma',
  react: 'React',
  reactPdf: 'ReactPDF',
  reactTestingLibrary: 'React Testing Library',
  redux: 'Redux',
  rest: 'REST',
  rust: 'Rust',
  sanity: 'Sanity',
  seo: 'SEO',
  serverless: 'Serverless',
  springBoot: 'Spring Boot',
  stencil: 'Stencil',
  storybook: 'StoryBook',
  subversion: 'Subversion (SVN)',
  tailwind: 'Tailwind',
  tdd: 'TDD',
  twilio: 'Twilio',
  typeGraphQl: 'TypeGraphQL',
  typeOrm: 'TypeORM',
  typeScript: 'TypeScript',
  uswds: 'United States Web Design System (USWDS)',
  vitest: 'Vitest',
  vue: 'Vue',
  webAssembly: 'WebAssembly',
  webRtc: 'WebRTC',
  webSockets: 'WebSockets',
  xUnit: 'XUnit',
  yii: 'Yii',
  zod: 'Zod',
};

export const skills = new Set([
  { skill: skill.cSharpDotNet, years: 1.499 },
  { skill: skill.react, years: 3.9147 },
  { skill: skill.typeScript, years: 2.4157 },
  { skill: skill.javascript, years: 5.1637 },
  { skill: skill.node, years: 3.748 },
  { skill: skill.php, years: 0.5829 },
  { skill: skill.java, years: 0.6662 },
]);

export const sortedSkills = [...skills].sort((a, b) => {
  return b.years - a.years;
});

export const maxYears = Math.max(
  ...[...skills].map(skill => {
    return skill.years;
  }),
);
